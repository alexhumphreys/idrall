Right (ERecordLit fromList [((MkFieldName "depends"), (EListLit (Just (EApp EList EText)) [(ETextLit MkChunks [] "base"), (ETextLit MkChunks [] "contrib")])), ((MkFieldName "deps"), (EListLit (Just (EApp EList (ERecord fromList [((MkFieldName "name"), EText), ((MkFieldName "ns"), EText), ((MkFieldName "requirement"), EText)]))) [])), ((MkFieldName "description"), (ESome (ETextLit MkChunks [] "Dhall compiler for Idris2"))), ((MkFieldName "devDeps"), (EListLit (Just (EApp EList (ERecord fromList [((MkFieldName "name"), EText), ((MkFieldName "ns"), EText), ((MkFieldName "requirement"), EText)]))) [])), ((MkFieldName "executable"), (EApp ENone EText)), ((MkFieldName "gitDeps"), (EListLit (Just (EApp EList (ERecord fromList [((MkFieldName "commit"), EText), ((MkFieldName "subDirs"), (EApp EList EText)), ((MkFieldName "url"), EText)]))) [])), ((MkFieldName "license"), (ESome (ETextLit MkChunks [] "MPL2"))), ((MkFieldName "link"), (EApp ENone EText)), ((MkFieldName "localDeps"), (EListLit (Just (EApp EList EText)) [])), ((MkFieldName "main"), (EApp ENone EText)), ((MkFieldName "modules"), (EListLit (Just (EApp EList EText)) [(ETextLit MkChunks [] "Idrall.Expr"), (ETextLit MkChunks [] "Idrall.Value"), (ETextLit MkChunks [] "Idrall.Resolve"), (ETextLit MkChunks [] "Idrall.Parser"), (ETextLit MkChunks [] "Idrall.Lexer"), (ETextLit MkChunks [] "Idrall.Eval"), (ETextLit MkChunks [] "Idrall.Check"), (ETextLit MkChunks [] "Idrall.Error"), (ETextLit MkChunks [] "Idrall.Map"), (ETextLit MkChunks [] "Idrall.IOEither"), (ETextLit MkChunks [] "Idrall.Path"), (ETextLit MkChunks [] "Idrall.TestHelper"), (ETextLit MkChunks [] "Idrall.APIv1"), (ETextLit MkChunks [] "Idrall.API.V2"), (ETextLit MkChunks [] "Idrall.Derive")])), ((MkFieldName "ns"), (ETextLit MkChunks [] "AlexHumphreys")), ((MkFieldName "package"), (ETextLit MkChunks [] "Idrall")), ((MkFieldName "readme"), (ESome (ETextLit MkChunks [] "./README.md"))), ((MkFieldName "sourcedir"), (ETextLit MkChunks [] ".")), ((MkFieldName "version"), (ETextLit MkChunks [] "0.1.0"))])
