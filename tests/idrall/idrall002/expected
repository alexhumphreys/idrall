1/1: Building All (All.idr)
Main> Testing: ../../../dhall-lang/tests/type-inference/success/CacheImportsA.dhall
7| 	  :   https://test.dhall-lang.org/random-string as Text
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../../../dhall-lang/tests/type-inference/success/CacheImportsA.dhall:(7, 7)-(7, 56)ErrorMessage: "TODO as Text not implemented"

Testing: ../../../dhall-lang/tests/type-inference/success/CacheImportsCanonicalizeA.dhall
6| 	  :   https://test.dhall-lang.org/random-string as Text
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

../../../dhall-lang/tests/type-inference/success/CacheImportsCanonicalizeA.dhall:(6, 7)-(6, 56)ErrorMessage: "TODO as Text not implemented"

Testing: ../../../dhall-lang/tests/type-inference/success/accessEncodedTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/accessTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/preferMixedRecordsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/preferMixedRecordsSameFieldA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/preludeA.dhall
55|     ? ./Text/package.dhall
          ^^^^^^^^^^^^^^^^^^^^

../../../dhall-lang/tests/type-inference/success/../../../Prelude/package.dhall:(55, 6)-(55, 26)ParseError "Just \"../../../dhall-lang/tests/type-inference/success/../../../Prelude/./Text/package.dhall\" [error: Expected '\8704'\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'forall'\ntokens: Just (MkBounds 0 0 0 1), error: expected builtin\ntokens: Just (MkBounds 0 0 0 1), error: expected name\ntokens: Just (MkBounds 0 0 0 1), error: expected name\ntokens: Just (MkBounds 0 0 0 1), error: expected \" or ''\ntokens: Just (MkBounds 0 0 0 1), error: expected \" or ''\ntokens: Just (MkBounds 0 0 0 1), error: expected natural\ntokens: Just (MkBounds 0 0 0 1), error: expected integer\ntokens: Just (MkBounds 0 0 0 1), error: expected double\ntokens: Just (MkBounds 0 0 0 1), error: expected builtin\ntokens: Just (MkBounds 0 0 0 1), error: Expected '\8704'\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'forall'\ntokens: Just (MkBounds 0 0 0 1), error: Expected '}'\ntokens: Just (MkBounds 0 2 0 8), error: Expected '}'\ntokens: Just (MkBounds 0 2 0 8), error: Expected '='\ntokens: Just (MkBounds 0 2 0 8), error: Expected '}'\ntokens: Just (MkBounds 36 7 36 8), error: Expected '<'\ntokens: Just (MkBounds 0 0 0 1), error: expected http import\ntokens: Just (MkBounds 0 0 0 1), error: expected env import\ntokens: Just (MkBounds 0 0 0 1), error: expected import path\ntokens: Just (MkBounds 0 0 0 1), error: expected missing\ntokens: Just (MkBounds 0 0 0 1), error: expected http import\ntokens: Just (MkBounds 0 0 0 1), error: expected env import\ntokens: Just (MkBounds 0 0 0 1), error: expected import path\ntokens: Just (MkBounds 0 0 0 1), error: expected missing\ntokens: Just (MkBounds 0 0 0 1), error: expected http import\ntokens: Just (MkBounds 0 0 0 1), error: expected env import\ntokens: Just (MkBounds 0 0 0 1), error: expected import path\ntokens: Just (MkBounds 0 0 0 1), error: expected missing\ntokens: Just (MkBounds 0 0 0 1), error: expected http import\ntokens: Just (MkBounds 0 0 0 1), error: expected env import\ntokens: Just (MkBounds 0 0 0 1), error: expected import path\ntokens: Just (MkBounds 0 0 0 1), error: expected missing\ntokens: Just (MkBounds 0 0 0 1), error: Expected '['\ntokens: Just (MkBounds 0 0 0 1), error: Expected '('\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'let'\ntokens: Just (MkBounds 0 0 0 1), error: Expected '\\'\ntokens: Just (MkBounds 0 0 0 1), error: Expected '\955'\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'assert'\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'if'\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'merge'\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'toMap'\ntokens: Just (MkBounds 0 0 0 1)]"

Testing: ../../../dhall-lang/tests/type-inference/success/recordOfRecordOfTypesA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/recordOfTypesA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/and/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/and/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/build/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/build/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/even/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/even/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/even/2A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/even/3A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/fold/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/fold/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/not/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/not/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/odd/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/odd/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/odd/2A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/odd/3A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/or/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/or/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/show/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Bool/show/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Double/show/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Double/show/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Integer/show/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Integer/show/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Integer/toDouble/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Integer/toDouble/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/all/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/all/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/any/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/any/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/build/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/build/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/concat/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/concat/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/concatMap/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/concatMap/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/filter/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/filter/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/fold/0A.dhall
27|           assert
              ^^^^^^

../../../dhall-lang/tests/type-inference/success/prelude/List/fold/../../../../../../Prelude/List/fold.dhall:(27, 10)-(34, 40)AssertError: not an EEquivalent type

Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/fold/1A.dhall
27|           assert
              ^^^^^^

../../../dhall-lang/tests/type-inference/success/prelude/List/fold/../../../../../../Prelude/List/fold.dhall:(27, 10)-(34, 40)AssertError: not an EEquivalent type

Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/fold/2A.dhall
27|           assert
              ^^^^^^

../../../dhall-lang/tests/type-inference/success/prelude/List/fold/../../../../../../Prelude/List/fold.dhall:(27, 10)-(34, 40)AssertError: not an EEquivalent type

Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/generate/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/generate/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/head/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/head/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/indexed/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/indexed/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/iterate/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/iterate/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/last/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/last/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/length/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/length/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/map/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/map/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/null/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/null/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/replicate/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/replicate/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/reverse/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/reverse/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/shifted/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/shifted/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/unzip/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/List/unzip/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Monoid/00A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Monoid/01A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Monoid/02A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Monoid/03A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Monoid/04A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Monoid/05A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Monoid/06A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Monoid/07A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Monoid/08A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Monoid/09A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Monoid/10A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/build/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/build/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/enumerate/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/enumerate/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/even/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/even/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/fold/0A.dhall
18|           assert
              ^^^^^^

../../../dhall-lang/tests/type-inference/success/prelude/Natural/fold/../../../../../../Prelude/Natural/fold.dhall:(18, 10)-(20, 41)AssertError: not an EEquivalent type

Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/fold/1A.dhall
18|           assert
              ^^^^^^

../../../dhall-lang/tests/type-inference/success/prelude/Natural/fold/../../../../../../Prelude/Natural/fold.dhall:(18, 10)-(20, 41)AssertError: not an EEquivalent type

Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/fold/2A.dhall
18|           assert
              ^^^^^^

../../../dhall-lang/tests/type-inference/success/prelude/Natural/fold/../../../../../../Prelude/Natural/fold.dhall:(18, 10)-(20, 41)AssertError: not an EEquivalent type

Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/isZero/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/isZero/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/odd/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/odd/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/product/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/product/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/show/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/show/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/sum/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/sum/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/toDouble/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/toDouble/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/toInteger/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Natural/toInteger/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/all/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/all/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/any/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/any/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/build/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/build/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/concat/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/concat/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/concat/2A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/filter/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/filter/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/fold/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/fold/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/head/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/head/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/head/2A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/last/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/last/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/last/2A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/length/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/length/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/map/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/map/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/null/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/null/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/toList/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/toList/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/unzip/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Optional/unzip/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Text/concat/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Text/concat/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Text/concatMap/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Text/concatMap/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Text/concatMapSep/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Text/concatMapSep/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Text/concatSep/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/prelude/Text/concatSep/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/regression/LambdaInLetScoping1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/regression/LambdaInLetScoping2A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/regression/RecursiveRecordTypeMergeTripleCollisionA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/regression/TodoA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/anonymousFunctionsInTypesA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/combineMixedRecordsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/completionA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/complexShadowingA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/fieldsAreTypesA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/kindParameterA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/mergeEquivalenceA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/mixedFieldAccessA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/orderInsensitivityA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/toMapEmptyNormalizeAnnotationA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/unionsOfTypesA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/access/0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/simple/access/1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/AssertAlphaA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/AssertNaNA.dhall
5| assert : NaN === NaN
            ^^^

../../../dhall-lang/tests/type-inference/success/unit/AssertNaNA.dhall:(5, 9)-(5, 12)AlphaEquivError: +nan.0
 not alpha equivalent to:
+nan.0

Testing: ../../../dhall-lang/tests/type-inference/success/unit/AssertSimpleA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/AssertTrivialA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/BoolA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/CompletionA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ConstructorShiftA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/DoubleA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/DoubleLiteralA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/DoubleShowA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/EquivalenceA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FalseA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionApplicationA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionApplicationNormalizeArgumentA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionApplicationNormalizeResultA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionDependentType1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionDependentType2A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionNamedArgA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionNormalizeTypeAnnotationA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionTypeKindKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionTypeKindTermA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionTypeKindTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionTypeTermTermA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionTypeTypeKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionTypeTypeTermA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionTypeTypeTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/FunctionTypeUsingArgumentA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/IfA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/IfBranchesKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/IfBranchesTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/IfNormalizeArgumentsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/IntegerA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/IntegerClampA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/IntegerLiteralA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/IntegerNegateA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/IntegerShowA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/IntegerToDoubleA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/KindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/LetA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/LetNestedTypeSynonymA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/LetTypeSynonymA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/LetWithAnnotationA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListBuildA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListFoldA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListHeadA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListIndexedA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListLastA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListLengthA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListLiteralEmptyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListLiteralEmptyNormalizeAnnotationA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListLiteralNormalizeArgumentsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListLiteralOneA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ListReverseA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/MergeEmptyAlternativeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/MergeEmptyUnionA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/MergeNoneA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/MergeOneA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/MergeOneEmptyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/MergeOneWithAnnotation0A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/MergeOneWithAnnotation1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/MergeOptionalA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/MergeSomeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/MergeTrickyShadowingA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/NaturalA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/NaturalBuildA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/NaturalEvenA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/NaturalFoldA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/NaturalIsZeroA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/NaturalLiteralA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/NaturalOddA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/NaturalShowA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/NaturalSubtractA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/NaturalToIntegerA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/NoneA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorAndA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorAndNormalizeArgumentsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorEqualA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorEqualNormalizeArgumentsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorListConcatenateA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorListConcatenateNormalizeArgumentsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorNotEqualA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorNotEqualNormalizeArgumentsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorOrA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorOrNormalizeArgumentsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorPlusA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorPlusNormalizeArgumentsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorTextConcatenateA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorTextConcatenateNormalizeArgumentsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorTimesA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OperatorTimesNormalizeArgumentsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/OptionalA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordEmptyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordLitDottedFieldsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordLitDottedFieldsMergeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordLitDuplicateFieldsAbstractA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordLitDuplicateFieldsNoCollisionsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordLitNormalizeFieldTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordLitPunA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordLitPunCaptureA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordLitPunSomeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordLitSortFieldsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordMixedKinds2A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordMixedKindsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordNestedKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordNestedKindLikeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordNestedTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordNestedTypeLikeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordOneKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordOneTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordOneValueA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordProjectionByTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordProjectionByTypeEmptyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordProjectionByTypeJudgmentalEqualityA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordProjectionEmptyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordProjectionEmptyKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordProjectionKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordProjectionTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordProjectionValueA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordSelectionKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordSelectionTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordSelectionValueA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordTypeEmptyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordTypeKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordTypeKindLikeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordTypeMixedKinds2A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordTypeMixedKinds3A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordTypeMixedKindsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordTypeNestedKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordTypeNestedKindLikeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecordTypeTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordMergeBoolTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordMergeLhsEmptyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordMergeMixedKindsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordMergeRecursivelyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordMergeRecursivelyKindsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordMergeRecursivelyTypesA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordMergeRhsEmptyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordMergeTwoA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordMergeTwoKindsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordMergeTwoTypesA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordTypeMergeDeepA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordTypeMergeRecursivelyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordTypeMergeRecursivelyKindsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordTypeMergeRecursivelyTypesA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordTypeMergeRhsEmptyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordTypeMergeTwoA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordTypeMergeTwoKindsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RecursiveRecordTypeMergeTwoTypesA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RightBiasedRecordMergeMixedKindsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RightBiasedRecordMergeRhsEmptyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RightBiasedRecordMergeTwoA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RightBiasedRecordMergeTwoDifferentA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RightBiasedRecordMergeTwoKindsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/RightBiasedRecordMergeTwoTypesA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ShowConstructorEmptyA.dhall
0| showConstructor <A>.A
   ^^^^^^^^^^^^^^^

../../../dhall-lang/tests/type-inference/success/unit/ShowConstructorEmptyA.dhall:(0, 0)-(0, 15)MissingVar: "showConstructor@0\n in Cxt: (MkCxt { values = Empty, types = 2})"

Testing: ../../../dhall-lang/tests/type-inference/success/unit/ShowConstructorNonEmptyA.dhall
0| showConstructor (< A : Bool>.A False)
   ^^^^^^^^^^^^^^^

../../../dhall-lang/tests/type-inference/success/unit/ShowConstructorNonEmptyA.dhall:(0, 0)-(0, 15)MissingVar: "showConstructor@0\n in Cxt: (MkCxt { values = Empty, types = 2})"

Testing: ../../../dhall-lang/tests/type-inference/success/unit/ShowConstructorOptionalA.dhall
0| showConstructor (Some 0)
   ^^^^^^^^^^^^^^^

../../../dhall-lang/tests/type-inference/success/unit/ShowConstructorOptionalA.dhall:(0, 0)-(0, 15)MissingVar: "showConstructor@0\n in Cxt: (MkCxt { values = Empty, types = 2})"

Testing: ../../../dhall-lang/tests/type-inference/success/unit/SomeTrueA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TextA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TextLiteralA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TextLiteralNormalizeArgumentsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TextLiteralWithInterpolationA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TextReplaceA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TextShowA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ToMapA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ToMapAnnotatedA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/ToMapInferTypeFromRecordA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TrueA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TypeAnnotationA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TypeAnnotationFunctionA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TypeAnnotationNormalizeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/TypeAnnotationSortA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/UnionConstructorEmptyFieldA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/UnionConstructorFieldA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/UnionTypeEmptyA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/UnionTypeKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/UnionTypeMixedKinds1A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/UnionTypeMixedKinds2A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/UnionTypeMixedKinds3A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/UnionTypeMixedKinds4A.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/UnionTypeOneA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/UnionTypeTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/WithCreateIntermediateRecordsA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/WithInfersKindA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/WithNestedA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/WithNewFieldA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/WithNewTypeA.dhall
Testing: ../../../dhall-lang/tests/type-inference/success/unit/WithOptionalTypeUnchangedA.dhall
(0, 0)-(0, 86)ParseError "Just \"../../../dhall-lang/tests/type-inference/success/unit/WithOptionalTypeUnchangedA.dhall\" [error: Expected '\8704'\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'forall'\ntokens: Just (MkBounds 0 0 0 1), error: expected name\ntokens: Just (MkBounds 0 14 0 15), error: Expected 'let'\ntokens: Just (MkBounds 0 0 0 1), error: Expected '\\'\ntokens: Just (MkBounds 0 0 0 1), error: Expected '\955'\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'assert'\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'if'\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'merge'\ntokens: Just (MkBounds 0 0 0 1), error: Expected 'toMap'\ntokens: Just (MkBounds 0 0 0 1)]"
Testing: ../../../dhall-lang/tests/type-inference/success/unit/time/DateA.dhall
0| Date
   ^^^^

../../../dhall-lang/tests/type-inference/success/unit/time/DateA.dhall:(0, 0)-(0, 4)MissingVar: "Date@0\n in Cxt: (MkCxt { values = Empty, types = 2})"

Testing: ../../../dhall-lang/tests/type-inference/success/unit/time/DateLiteralA.dhall
0| 2000-01-01
   ^^^^

MkVirtualFCTODOUnexpected: VNatural is not a VPi or VHPi

Testing: ../../../dhall-lang/tests/type-inference/success/unit/time/DateTimeLiteralA.dhall
0| 2000-01-01T12:00:00
   ^^^^

MkVirtualFCTODOUnexpected: VNatural is not a VPi or VHPi

Testing: ../../../dhall-lang/tests/type-inference/success/unit/time/DateTimeTimeZoneLiteralA.dhall
0| 2000-01-01T12:00:00+08:00
   ^^^^

MkVirtualFCTODOUnexpected: VNatural is not a VPi or VHPi

Testing: ../../../dhall-lang/tests/type-inference/success/unit/time/TimeA.dhall
0| Time
   ^^^^

../../../dhall-lang/tests/type-inference/success/unit/time/TimeA.dhall:(0, 0)-(0, 4)MissingVar: "Time@0\n in Cxt: (MkCxt { values = Empty, types = 2})"

Testing: ../../../dhall-lang/tests/type-inference/success/unit/time/TimeLiteralA.dhall
0| 12:00:00
   ^^

MkVirtualFCTODOAlphaEquivError: VNatural
 not alpha equivalent to:
(VNaturalLit 0)

Testing: ../../../dhall-lang/tests/type-inference/success/unit/time/TimeTimeZoneLiteralA.dhall
0| 12:00:00+08:00
   ^^

MkVirtualFCTODOAlphaEquivError: VNatural
 not alpha equivalent to:
(VNaturalLit 0)

Testing: ../../../dhall-lang/tests/type-inference/success/unit/time/TimeZoneA.dhall
0| TimeZone
   ^^^^^^^^

../../../dhall-lang/tests/type-inference/success/unit/time/TimeZoneA.dhall:(0, 0)-(0, 8)MissingVar: "TimeZone@0\n in Cxt: (MkCxt { values = Empty, types = 2})"

Testing: ../../../dhall-lang/tests/type-inference/success/unit/time/TimeZoneLiteralA.dhall
0| +08:00
   ^^^

MkVirtualFCTODOAlphaEquivError: VInteger
 not alpha equivalent to:
(VNaturalLit 0)

Result:
Pass: 340
Fail: 23
Main> Bye for now!
